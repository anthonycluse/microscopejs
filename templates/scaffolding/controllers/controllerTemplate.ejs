<% var entity = model.name.charAt(0).toUpperCase() + model.name.slice(1); %>

/**
* Module dependencies.
*/
var <%= entity %>DAL = require('../dal/<%= model.name %>DAL');
var csrfFilters = require('../filters/csrfFilters');

/**
* <%= model.name %>Controller class
*/
(function () {

    /**
    * Attributes.
    */
    var <%= model.name %>DAL = new <%= entity %>DAL();

    /**
    * Constructor.
    * @param {app} - express app.
    */
    function <%= entity %>Controller(app) {
        this.routes(app);
    }

    /**
    * <%= model.name %>Controller routes.
    * @param {app} - express app.
    */
    <%= entity %>Controller.prototype.routes = function(app) {
        app.all('/<%= model.name %>*', csrfFilters.csrf);

        app.get('/<%= model.name %>', this.index);
        app.get('/<%= model.name %>/show/:id', this.show);
        app.get('/<%= model.name %>/new', csrfFilters.antiForgeryToken, this.new);
        app.post('/<%= model.name %>/create', this.create);
        app.get('/<%= model.name %>/edit/:id', csrfFilters.antiForgeryToken, this.edit);
        app.post('/<%= model.name %>/edit', this.update);
        app.get('/<%= model.name %>/delete/:id', csrfFilters.antiForgeryToken, this.delete);
        app.post('/<%= model.name %>/delete', this.destroy);
    };

    /**
    * [httpget]
    * <%= entity %>Controller index action.
    * @param {req} http request.
    * @param {res} http response.
    */
    <%= entity %>Controller.prototype.index = function(req, res) {
        <%= model.name %>DAL.getAll(function (<%= model.name %>s) {
            res.render('<%= model.name %>/index', { '<%= model.name %>s': <%= model.name %>s });
        });
    };

    /**
    * [httpget]
    * <%= entity %>Controller details action.
    * @param {req} http request.
    * @param {res} http response.
    */
    <%= entity %>Controller.prototype.show = function(req, res) {
        var <%= model.name %>Id = req.params.id;
        <%= model.name %>DAL.get(<%= model.name %>Id, function (<%= model.name %>) {
            res.render('<%= model.name %>/show', { '<%= model.name %>': <%= model.name %> });
        });
    };

    /**
    * [httpget]
    * <%= entity %>Controller edit action.
    * @param {req} http request.
    * @param {res} http response.
    */
    <%= entity %>Controller.prototype.edit = function(req, res) {
        var <%= model.name %>Id = req.params.id;
        <%= model.name %>DAL.get(<%= model.name %>Id, function (<%= model.name %>) {
            res.render('<%= model.name %>/edit', { '<%= model.name %>': <%= model.name %> });
        });
    };

    /**
    * [httppost]
    * <%= entity %>Controller edit post action.
    * @param {req} http request.
    * @param {res} http response.
    */
    <%= entity %>Controller.prototype.update = function(req, res) {
        var <%= model.name %> = req.body.<%= model.name %>;
        <% for (var i = 0; i < model.properties.length; i++) { %>
        <% if(model.properties[i].type === "DATE"){ %><%- model.name %>.<%- model.properties[i].name %> = new Date(<%- model.name %>.<%- model.properties[i].name %>.year, <%- model.name %>.<%- model.properties[i].name %>.month, <%- model.name %>.<%- model.properties[i].name %>.day);<% } %>
        <% };%>
        <%= model.name %>DAL.get(<%= model.name %>.id, function(entity){
            if(entity){
                <%= model.name %>DAL.update(entity, <%= model.name %>, function (<%= model.name %>) {
                    res.redirect('/<%= model.name %>');
                });
            }
            else{
                res.send(404);
            }
        });
    };    

    /**
    * [httpget]
    * <%= model.name %>Controller create action.
    * @param {req} http request.
    * @param {res} http response.
    */
    <%= entity %>Controller.prototype.new = function(req, res) {
        res.render('<%= model.name %>/create');  
    };

    /**
    * [httppost]
    * <%= model.name %>Controller create post action.
    * @param {req} http request.
    * @param {res} http response.
    */
    <%= entity %>Controller.prototype.create = function(req, res) {
        var <%= model.name %> = req.body.<%= model.name %>;
        <% for (var i = 0; i < model.properties.length; i++) { %>
        <% if(model.properties[i].type === "DATE"){ %><%- model.name %>.<%- model.properties[i].name %> = new Date(<%- model.name %>.<%- model.properties[i].name %>.year, <%- model.name %>.<%- model.properties[i].name %>.month, <%- model.name %>.<%- model.properties[i].name %>.day);<% } %>
        <% };%>
        <%= model.name %>DAL.save(<%= model.name %>, function (data) {
            res.redirect('/<%= model.name %>');
        });
    };

    /**
    * [httpget]
    * <%= entity %>Controller delete action.
    * @param {req} http request.
    * @param {res} http response.
    */
    <%= entity %>Controller.prototype.delete = function(req, res) {
        var <%= model.name %>Id = req.params.id;
        <%= model.name %>DAL.get(<%= model.name %>Id, function (<%= model.name %>) {
            res.render('<%= model.name %>/delete', { '<%= model.name %>': <%= model.name %> });
        });
    };

    /**
    * [httppost]
    * <%= entity %>Controller delete post action.
    * @param {req} http request.
    * @param {res} http response.
    */
    <%= entity %>Controller.prototype.destroy = function(req, res) {
        var <%= model.name %> = req.body.<%= model.name %>;
        <%= model.name %>DAL.remove(<%= model.name %>.id, function (data) {
            res.redirect('/<%= model.name %>');
        });
    };

    module.exports = <%= entity %>Controller;
})();